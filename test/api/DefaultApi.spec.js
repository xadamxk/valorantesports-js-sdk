/*
 * ValorantEsports OpenApi Specification
 * Unofficial documentation to the ValorantEsports Api
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ValorantEsportsOpenApiSpecification);
  }
}(this, function(expect, ValorantEsportsOpenApiSpecification) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ValorantEsportsOpenApiSpecification.DefaultApi();
  });

  describe('(package)', function() {
    describe('DefaultApi', function() {
      describe('getEventDetails', function() {
        it('should call getEventDetails successfully', function(done) {
          // TODO: uncomment, update parameter values for getEventDetails call and complete the assertions
          /*

          instance.getEventDetails(hl, id, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ValorantEsportsOpenApiSpecification.GetEventDetails);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getEventList', function() {
        it('should call getEventList successfully', function(done) {
          // TODO: uncomment, update parameter values for getEventList call and complete the assertions
          /*
          var opts = {};

          instance.getEventList(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ValorantEsportsOpenApiSpecification.GetEventList);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLeagues', function() {
        it('should call getLeagues successfully', function(done) {
          // TODO: uncomment, update parameter values for getLeagues call and complete the assertions
          /*
          var opts = {};

          instance.getLeagues(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ValorantEsportsOpenApiSpecification.GetLeagues);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLeaguesForStandings', function() {
        it('should call getLeaguesForStandings successfully', function(done) {
          // TODO: uncomment, update parameter values for getLeaguesForStandings call and complete the assertions
          /*
          var opts = {};

          instance.getLeaguesForStandings(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ValorantEsportsOpenApiSpecification.GetLeaguesForStandings);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getLiveDetails', function() {
        it('should call getLiveDetails successfully', function(done) {
          // TODO: uncomment, update parameter values for getLiveDetails call and complete the assertions
          /*
          var opts = {};

          instance.getLiveDetails(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ValorantEsportsOpenApiSpecification.GetLiveDetails);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSchedule', function() {
        it('should call getSchedule successfully', function(done) {
          // TODO: uncomment, update parameter values for getSchedule call and complete the assertions
          /*
          var opts = {};

          instance.getSchedule(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ValorantEsportsOpenApiSpecification.GetSchedule);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getStandings', function() {
        it('should call getStandings successfully', function(done) {
          // TODO: uncomment, update parameter values for getStandings call and complete the assertions
          /*
          var opts = {};

          instance.getStandings(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ValorantEsportsOpenApiSpecification.GetStandings);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getVods', function() {
        it('should call getVods successfully', function(done) {
          // TODO: uncomment, update parameter values for getVods call and complete the assertions
          /*
          var opts = {};

          instance.getVods(hl, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ValorantEsportsOpenApiSpecification.GetVods);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
